[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\Никитта\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\Никитта\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.4.5 (Oracle Corporation Java 1.8.0_251)
[debug]       Load.loadUnit: plugins took 69.411ms
[debug]       Load.loadUnit: defsScala took 0.2302ms
[debug] [Loading] Scanning directory C:\Users\Никитта\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Никитта\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 14.464601 ms
[debug]           Load.resolveProject(global-plugins) took 47.2141ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\Никитта\.sbt\1.0\plugins, plugins: List(<none>))) took 81.919299ms
[debug] [Loading] Done in C:\Users\Никитта\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 169.9993ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.1826ms
[debug]     Load.loadUnit(file:/C:/Users/Никитта/.sbt/1.0/plugins/, ...) took 244.8565ms
[debug]   Load.apply: load took 441.3245ms
[debug]   Load.apply: resolveProjects took 4.6057ms
[debug]   Load.apply: finalTransforms took 72.030199ms
[debug]   Load.apply: config.delegates took 5.3285ms
[debug]   Load.apply: Def.make(settings)... took 1035.4267ms
[debug]   Load.apply: structureIndex took 72.534301ms
[debug]   Load.apply: mkStreams took 1.4675ms
[info] loading global plugins from C:\Users\Никитта\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 11033.3942ms
[debug]           Load.loadUnit: plugins took 15.9534ms
[debug]           Load.loadUnit: defsScala took 0.0019ms
[debug] [Loading] Scanning directory C:\kitpo_lr_3\project
[debug]             Load.loadUnit: mkEval took 6.6205ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\kitpo_lr_3\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 0.8766 ms
[info] loading settings for project kitpo_lr_3-build from idea.sbt ...
[debug]               Load.resolveProject(kitpo_lr_3-build) took 6.0032ms
[debug]             Load.loadTransitive: finalizeProject(Project(id kitpo_lr_3-build, base: C:\kitpo_lr_3\project, plugins: List(<none>))) took 7.1847ms
[debug] [Loading] Done in C:\kitpo_lr_3\project, returning: (kitpo_lr_3-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 1630.3865ms
[debug]           Load.loadUnit: cleanEvalClasses took 3.1281ms
[debug]         Load.loadUnit(file:/C:/kitpo_lr_3/project/, ...) took 1650.099599ms
[debug]       Load.apply: load took 1651.1152ms
[debug]       Load.apply: resolveProjects took 0.0947ms
[debug]       Load.apply: finalTransforms took 6.5339ms
[debug]       Load.apply: config.delegates took 0.270401ms
[debug]       Load.apply: Def.make(settings)... took 55.230101ms
[debug]       Load.apply: structureIndex took 19.126ms
[debug]       Load.apply: mkStreams took 0.002ms
[info] loading project definition from C:\kitpo_lr_3\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 2644.2472ms
[debug]     Load.loadUnit: defsScala took 0.001599ms
[debug] [Loading] Scanning directory C:\kitpo_lr_3
[debug]       Load.loadUnit: mkEval took 0.1863ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\kitpo_lr_3, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin))), Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 1.29 ms
[info] loading settings for project kitpo_lr_3 from build.sbt ...
[debug]         Load.resolveProject(kitpo_lr_3) took 22.606401ms
[debug]       Load.loadTransitive: finalizeProject(Project(id kitpo_lr_3, base: C:\kitpo_lr_3, plugins: List(<none>))) took 24.7592ms
[debug] [Loading] Done in C:\kitpo_lr_3, returning: (kitpo_lr_3)
[debug]     Load.loadUnit: loadedProjectsRaw took 517.001ms
[debug]     Load.loadUnit: cleanEvalClasses took 6.5822ms
[debug]   Load.loadUnit(file:/C:/kitpo_lr_3/, ...) took 3168.3688ms
[debug] Load.apply: load took 3169.4472ms
[debug] Load.apply: resolveProjects took 0.0726ms
[debug] Load.apply: finalTransforms took 18.657299ms
[debug] Load.apply: config.delegates took 0.725099ms
[debug] Load.apply: Def.make(settings)... took 44.867599ms
[debug] Load.apply: structureIndex took 14.866799ms
[debug] Load.apply: mkStreams took 0.002001ms
[info] set current project to kitpo_lr_3 (in build file:/C:/kitpo_lr_3/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 60671 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 60671, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to kitpo_lr_3 (in build file:/C:/kitpo_lr_3/)
[debug] > Exec(idea-shell, None, None)
